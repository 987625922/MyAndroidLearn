apply plugin: 'com.android.application'
//butterknife需要添加
apply plugin: 'com.jakewharton.butterknife'



android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //Build的变量设置 在代码中可以通过BuildConfig获取
        buildConfigField "String", "REQUEST_KEY", '"bLsBMeMaN10pN8z64TQ0fC3fztDlRsPn"'
        //导入so文件
        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDir "src/main/libs"
        }
        multiDexEnabled true //规避 64K 限制

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    //签名设置
    signingConfigs {
        sunSign {

        }
    }

    //    签名配置
    buildTypes {
        release {
            buildConfigField "boolean", "DebugMode", "true"//关闭DEBUG
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //            signingConfig signingConfigs.sunSign
        }
        debug {
            minifyEnabled false
            useProguard false
            minifyEnabled false
            buildConfigField "boolean", "DebugMode", "true"//关闭DEBUG
        }
    }

    flavorDimensions "default"
    productFlavors {
        develop {}
        xiaomi {}
        huawei {}
        anzhi {}
    }

    //导入aar
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    api rootProject.ext.dependencies["appcompat_v7"]
    api rootProject.ext.dependencies["constraint-layout"]
    //noinspection GradleCompatible
    api rootProject.ext.dependencies["recyclerview-v7"]
    // glide
    api rootProject.ext.dependencies["glide"]
    //retrofit封装okhttp，converter-gson为retrofit提供解析
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["retrofit2"]
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["adapter-rxjava2"]
    //rxandroid
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["adapter-rxjava"]
    //bilibili
    api rootProject.ext.dependencies["ijkplayer-java"]
    api rootProject.ext.dependencies["ijkplayer-armv7a"]
    api rootProject.ext.dependencies["ijkplayer-exo"]
    //butterknife需要添加
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //    eventbus
    api rootProject.ext.dependencies["eventbus"]
    //    livedatabus
    api rootProject.ext.dependencies["live-event-bus"]
    //   room
    api rootProject.ext.dependencies["runtime"]
    annotationProcessor rootProject.ext.dependencies["compiler"]
    api rootProject.ext.dependencies["roomrxjava2"]
    // ViewModel and LiveData
    api rootProject.ext.dependencies["lifecycleextensions"]
    api rootProject.ext.dependencies["lifecycleviewmodel"]
    //权限申请 https://github.com/tbruyelle/RxPermissions
    api rootProject.ext.dependencies["rxpermissions"]
    //导入aar格式
    //    compile(name: 'lyx-library-1.0.3', ext: 'aar')
    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_annotation"]
}
