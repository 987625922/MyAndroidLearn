apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd-hh-mm-ss", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wyt.zdf.myapplication"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //Build的变量设置 在代码中可以通过BuildConfig获取
        buildConfigField "String", "REQUEST_KEY", '"bLsBMeMaN10pN8z64TQ0fC3fztDlRsPn"'
        //导入so文件
        sourceSets.main{
            jni.srcDirs = []
            jniLibs.srcDir "src/main/libs"
        }

    }

    //签名设置
    signingConfigs {
        sunSign {
            keyAlias 'sun'
            keyPassword '123456'
            storeFile file('F:/Keys/releaseKey.jks')
            storePassword '123456'
        }
    }

//    签名配置
    buildTypes {
        release {
            buildConfigField "boolean", "DebugMode", "true"//关闭DEBUG
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sunSign
        }
        debug {
            minifyEnabled false
            useProguard false
            minifyEnabled false
            buildConfigField "boolean", "DebugMode", "true"//关闭DEBUG
        }
    }

    flavorDimensions "default"
    productFlavors {
        develop{}
        xiaomi{}
        huawei{}
        anzhi{}
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}-${releaseTime()}.apk"
        }
    }
    //导入aar
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    //retrofit封装okhttp，converter-gson为retrofit提供解析
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    //rxandroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
// (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'

    //bilibili
    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'
    //导入aar格式
//    compile(name: 'lyx-library-1.0.3', ext: 'aar')
}
